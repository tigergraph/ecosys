//graph schema is on page 13 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
//IC 1 query description is on page 32 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf

SET syntax_version = "v2"
USE GRAPH ldbc_snb
DROP QUERY ic_1

CREATE QUERY ic_1(VERTEX<Person> personId, STRING firstName) FOR GRAPH ldbc_snb {
  TYPEDEF TUPLE<VERTEX<Person> v, INT distanceFromPerson, STRING lastName, INT id> friendInfo;
  TYPEDEF TUPLE<STRING orgName, INT orgYear, STRING orgPlace> org; 

  HeapAccum<friendInfo>(20, distanceFromPerson ASC, lastName ASC, id ASC) @@friendInfoTop;
  SetAccum<VERTEX<Person>> @@friendAll;
  SetAccum<org> @comp, @univ;
  SumAccum<STRING> @cityName;
  SumAccum<INT> @distance, @orgYear;
  MapAccum<INT, STRING> @@cityInfo;
  MapAccum<INT, SetAccum<org>> @@compInfo, @@univInfo;
  OrAccum @visited = False;

  INT i = 0;

  vPerson = { personId };

  WHILE i < 3 DO
    vPerson = 
      SELECT t
      FROM vPerson:s-((Person_KNOWS_Person>|<Person_KNOWS_Person):e)-Person:t
      WHERE t.@visited == False
      ACCUM 
        s.@visited += True,
        t.@visited += True,
        t.@distance = (i+1)
      POST-ACCUM
        CASE WHEN t.firstName == firstName THEN 
          @@friendInfoTop += friendInfo(t, t.@distance, t.lastName, t.id)
        END;

    IF @@friendInfoTop.size() >= 20 THEN BREAK; END;
    i = i + 1;
  END;

  FOREACH f IN @@friendInfoTop DO
    @@friendAll += f.v;
  END;

  vFriend = { @@friendAll };
  accPersonOrg1 =
    SELECT s
    FROM vFriend:s
        -((Person_IS_LOCATED_IN_City>|Person_WORK_AT_Company>|Person_STUDY_AT_University>):e)-(City|Company|University):t
    ACCUM
      CASE
        WHEN t.type == "City" THEN
          @@cityInfo += (s.id -> t.name)
        WHEN t.type == "Company" THEN
          t.@orgYear += e.workFrom
        WHEN t.type == "University" THEN
          t.@orgYear += e.classYear
      END;

  vFriend =
    SELECT s
    FROM vFriend:s
        -((Person_WORK_AT_Company>|Person_STUDY_AT_University>):e1)-(Company|University):t1
        -((Company_IS_LOCATED_IN_Country>|University_IS_LOCATED_IN_City>):e2)-(Country|City):t2
    ACCUM
      CASE
        WHEN t1.type == "Company" THEN
          @@compInfo += (s.id -> org(t1.name, t1.@orgYear, t2.name))
        WHEN t1.type == "University" THEN
          @@univInfo += (s.id -> org(t1.name, t1.@orgYear, t2.name))
      END
    POST-ACCUM 
      s.@cityName += @@cityInfo.get(s.id),
      s.@univ += @@univInfo.get(s.id),
      s.@comp += @@compInfo.get(s.id)
    ORDER BY s.@distance ASC, s.lastName ASC, s.id ASC;

  PRINT vFriend[
      vFriend.id AS friendId,
      vFriend.lastName AS friendLastName,
      vFriend.@distance AS distanceFromPerson,
      vFriend.birthday AS friendBirthday,
      vFriend.creationDate AS friendCreationDate,
      vFriend.gender AS friendGender,
      vFriend.browserUsed AS friendBrowserUsed,
      vFriend.locationIP AS friendLocationIp,
      vFriend.email AS friendEmails,
      vFriend.speaks AS friendLanguages,
      vFriend.@cityName AS friendCityName,
      vFriend.@univ AS friendUniversities,
      vFriend.@comp AS friendCompanies];
}

// INSTALL QUERY ic_1
// RUN QUERY ic_1(30786325583618,"Carmen")
SET query_timeout = 180000
INTERPRET QUERY ic_1(30786325583618,"Carmen")
