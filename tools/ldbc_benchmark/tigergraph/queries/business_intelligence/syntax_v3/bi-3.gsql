//graph schema is on page 19 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
//BI 3 query description is on page 91 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
CREATE OR REPLACE DISTRIBUTED QUERY bi3(STRING tagClass, STRING country) SYNTAX v3 {
  TYPEDEF TUPLE <UINT forumId, STRING forumTitle, STRING forumCreationDate, UINT personId, UINT messageCount> RESULT;
  HeapAccum<RESULT>(20, messageCount DESC, forumId ASC) @@result;
  SumAccum<UINT> @messageCount;
  MinAccum<UINT> @personId;
  OrAccum <BOOL> @selected;
  forums =
    SELECT f
    FROM (cn:Country{name:country}) <-[:IS_PART_OF]-() <-[:IS_LOCATED_IN]- (p:Person) <-[:HAS_MODERATOR]- (f:Forum)
    ACCUM f.@personId = p.id, f.@selected += true;
  messages =
    SELECT m
    FROM (t:TagClass{name:tagClass}) <-[:HAS_TYPE]-()<-[:HAS_TAG]- (m:Comment:Post);
  posts1 = 
    SELECT p
    FROM (m:messages) -[:ROOT_POST]-> (p:Post)
    ACCUM p.@messageCount += 1;
  posts2 =
    SELECT p FROM (p:messages)
    WHERE p.type == "Post"
    ACCUM p.@messageCount += 1;
  posts = posts1 UNION posts2; 
  tmp =
    SELECT f
    FROM (p:posts) <-[:CONTAINER_OF]- (f:Forum)
    WHERE f.@selected
    ACCUM f.@messageCount += p.@messageCount
    POST-ACCUM (f) @@result += RESULT(f.id, f.title, ms_to_string(f.creationDate), f.@personId, f.@messageCount);

  PRINT @@result as result;
}
