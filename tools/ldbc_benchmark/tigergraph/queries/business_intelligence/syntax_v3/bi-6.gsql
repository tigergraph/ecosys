//graph schema is on page 19 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
//BI 6 query description is on page 94 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
CREATE OR REPLACE DISTRIBUTED QUERY bi6(STRING tag) SYNTAX v3 {
  TYPEDEF TUPLE <UINT personId, UINT authorityScore> RESULT;
  HeapAccum<RESULT>(100, authorityScore DESC, personId ASC) @@result;
  SumAccum<UINT> @authorityScore;
  MapAccum<VERTEX<Person>, MinAccum<UINT>> @pScore;

  message1 = SELECT m FROM (t:Tag {name:tag}) <-[:HAS_TAG]- (m:Comment:Post);

  tmp = SELECT m FROM (m:message1)<- [:LIKES]- (p2:Person)
    ACCUM m.@pScore += (p2->p2.popularityScore);
    
  person1 = SELECT p1 FROM (m:message1) -[:HAS_CREATOR]-> (p1:Person)
    ACCUM p1.@pScore += m.@pScore
    POST-ACCUM (p1)
      FOREACH (p,score) IN p1.@pScore DO
        p1.@authorityScore += score
      END,
      @@result += RESULT(p1.id, p1.@authorityScore), p1.@pScore.clear();
  PRINT @@result as result;
}