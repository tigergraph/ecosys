//graph schema is on page 19 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
//BI 4 query description is on page 92 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
CREATE OR REPLACE DISTRIBUTED QUERY bi4 (DATETIME date) SYNTAX v3 {
  TYPEDEF TUPLE <UINT personId, STRING personFirstName, STRING personLastName,
    STRING personCreationDate, UINT messageCount> RESULT;
  HeapAccum<RESULT>(100, messageCount DESC, personId ASC) @@result;
  OrAccum<BOOL> @inForum, @selected;
  SumAccum<UINT> @messageCount;
  INT epoch = datetime_to_epoch(date) * 1000;
  
  popularForums = SELECT f FROM (f:Forum)
    WHERE f.creationDate > epoch
    ORDER BY f.maxMember DESC, f.id ASC
    LIMIT 100;

  P = SELECT p FROM (:popularForums) -[:HAS_MEMBER]-> (p:Person) ACCUM p.@inForum += true;

  posts = SELECT p FROM (:popularForums) -[:CONTAINER_OF]-> (p:Post);

  comments = SELECT m FROM (:posts) <- [:ROOT_POST] -(m:Comment);

  M = posts UNION comments;

  tmp = SELECT p FROM (:M)- [:HAS_CREATOR] -> (p:Person)
    WHERE p.@inForum 
    ACCUM p.@messageCount += 1
    ORDER BY p.@messageCount DESC, p.id ASC 
    LIMIT 100;

  tmp = SELECT p FROM (p:P)
    ACCUM @@result += RESULT(p.id, p.firstName, p.lastName, ms_to_string(p.creationDate), p.@messageCount);

  PRINT @@result as result;
}
