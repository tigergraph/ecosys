package com.tigergraph.jdbc.common;

import java.io.InputStream;
import java.io.Reader;
import java.math.BigDecimal;
import java.net.URL;
import java.sql.ResultSet;
import java.sql.*;
import java.util.Calendar;
import java.util.HashMap;

public abstract class PreparedStatement extends Statement implements java.sql.PreparedStatement {

  protected HashMap<Integer, Object> parameters;
  protected String statement;
  private int parametersNumber;

  /**
   * Default constructor
   */
  protected PreparedStatement(Connection connection, String preparedStatement) {
    super(connection);
    this.statement = preparedStatement;

    /**
     * Number of parameters, i.e., occurrence of char "?"
     */
    this.parametersNumber = statement.length() - statement.replaceAll("\\?", "").length();
    this.parameters = new HashMap<>(this.parametersNumber);
  }

  /**
   * Check if the given parameter index is out of boundary.
   */
  private void checkParamsNumber(int parameterIndex) throws SQLException {
    // Interpreted queries need one additional parameter for query body.
    if (parameterIndex > this.parametersNumber + 1) {
      throw new SQLException("ParameterIndex is out of range.");
    }
  }

  /**
   * Insert a parameter into the map.
   */
  private void insertParameter(int index, Object obj) {
    this.parameters.put(index, obj);
  }

  /*
   * Methods with default implementation.
   */

  @Override public void setNull(int parameterIndex, int sqlType) throws SQLException {
    this.checkParamsNumber(parameterIndex);
    this.insertParameter(parameterIndex, null);
  }

  @Override public void setBoolean(int parameterIndex, boolean val) throws SQLException {
    this.checkParamsNumber(parameterIndex);
    this.insertParameter(parameterIndex, val);
  }

  @Override public void setShort(int parameterIndex, short val) throws SQLException {
    this.checkParamsNumber(parameterIndex);
    this.insertParameter(parameterIndex, val);
  }

  @Override public void setInt(int parameterIndex, int val) throws SQLException {
    this.checkParamsNumber(parameterIndex);
    this.insertParameter(parameterIndex, val);
  }

  @Override public void setLong(int parameterIndex, long val) throws SQLException {
    this.checkParamsNumber(parameterIndex);
    this.insertParameter(parameterIndex, val);
  }

  @Override public void setFloat(int parameterIndex, float val) throws SQLException {
    this.checkParamsNumber(parameterIndex);
    this.insertParameter(parameterIndex, val);
  }

  @Override public void setDouble(int parameterIndex, double val) throws SQLException {
    this.checkParamsNumber(parameterIndex);
    this.insertParameter(parameterIndex, val);
  }

  @Override public void setString(int parameterIndex, String val) throws SQLException {
    this.checkParamsNumber(parameterIndex);
    this.insertParameter(parameterIndex, val);
  }

  @Override public void setObject(int parameterIndex, Object val) throws SQLException {
    this.checkParamsNumber(parameterIndex);
    this.insertParameter(parameterIndex, val);
  }

  @Override public void clearParameters() throws SQLException {
    this.parameters.clear();
  }

  /*
   * Abstract Methods.
   */

  @Override public abstract boolean execute() throws SQLException;

  @Override public abstract ResultSet executeQuery() throws SQLException;

  @Override public abstract int executeUpdate() throws SQLException;

  @Override public abstract ResultSetMetaData getMetaData() throws SQLException;

  @Override public abstract ParameterMetaData getParameterMetaData() throws SQLException;

  /*
   * Methods not implemented yet.
   */

  @Override public void setUnicodeStream(int parameterIndex,
    InputStream val, int length) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public boolean execute(String sql, int autoGeneratedKeys) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public boolean execute(String sql) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public boolean execute(String sql, int[] columnIndexes) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public boolean execute(String sql, String[] columnNames) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public ResultSet executeQuery(String sql) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public int executeUpdate(String sql) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public int executeUpdate(String sql, int autoGeneratedKeys) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public int executeUpdate(String sql, int[] columnIndexes) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public int executeUpdate(String sql, String[] columnNames) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void setByte(int parameterIndex, byte val) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void setBigDecimal(int parameterIndex, BigDecimal x) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void setBytes(int parameterIndex, byte[] x) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void setDate(int parameterIndex, Date val) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void setTime(int parameterIndex, Time val) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void setTimestamp(int parameterIndex, Timestamp val) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void setAsciiStream(int parameterIndex,
    InputStream val, int length) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void setBinaryStream(int parameterIndex,
    InputStream val, int length) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void setObject(int parameterIndex,
    Object val, int targetSqlType) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void setCharacterStream(int parameterIndex,
    Reader reader, int length) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void setRef(int parameterIndex, Ref val) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void setBlob(int parameterIndex, Blob val) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void setClob(int parameterIndex, Clob val) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void setArray(int parameterIndex, Array val) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void setDate(int parameterIndex, Date val, Calendar cal) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void setTime(int parameterIndex, Time val, Calendar cal) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void setTimestamp(int parameterIndex,
    Timestamp val, Calendar cal) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void setNull(int parameterIndex,
    int sqlType, String typeName) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void setURL(int parameterIndex, URL val) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void setRowId(int parameterIndex, RowId val) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void setNString(int parameterIndex, String value) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void setNCharacterStream(int parameterIndex,
    Reader value, long length) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void setNClob(int parameterIndex, NClob value) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void setClob(int parameterIndex,
    Reader reader, long length) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void setBlob(int parameterIndex,
    InputStream inputStream, long length) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void setNClob(int parameterIndex,
    Reader reader, long length) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void setSQLXML(int parameterIndex, SQLXML xmlObject) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void setObject(int parameterIndex,
    Object val, int targetSqlType, int scaleOrLength) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void setAsciiStream(int parameterIndex,
    InputStream val, long length) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void setBinaryStream(int parameterIndex,
    InputStream val, long length) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void setCharacterStream(int parameterIndex,
    Reader reader, long length) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void setAsciiStream(int parameterIndex,
    InputStream val) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void setBinaryStream(int parameterIndex, InputStream val) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void setCharacterStream(int parameterIndex, Reader reader) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void setNCharacterStream(int parameterIndex, Reader value) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void setClob(int parameterIndex, Reader reader) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void setBlob(int parameterIndex, InputStream inputStream) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void setNClob(int parameterIndex, Reader reader) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void addBatch() throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

  @Override public void addBatch(String sql) throws SQLException {
    throw new UnsupportedOperationException("Not implemented yet.");
  }

}
